// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnet_rpg.Data;

namespace dotnet_rpg.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220202150608_FinalSeeding")]
    partial class FinalSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<int>("CharactersId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("CharacterSkill");

                    b.HasData(
                        new
                        {
                            CharactersId = 1,
                            SkillsId = 2
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 1
                        },
                        new
                        {
                            CharactersId = 2,
                            SkillsId = 3
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Class")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defeats")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fights")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HitPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Intelligence")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Strength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Characters");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = 0,
                            Defeats = 0,
                            Defense = 10,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 10,
                            Name = "Frodo",
                            Strength = 15,
                            UserId = 1,
                            Victories = 0
                        },
                        new
                        {
                            Id = 2,
                            Class = 1,
                            Defeats = 0,
                            Defense = 5,
                            Fights = 0,
                            HitPoints = 100,
                            Intelligence = 20,
                            Name = "Raistlin",
                            Strength = 5,
                            UserId = 2,
                            Victories = 0
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Damage = 30,
                            Name = "Fireball"
                        },
                        new
                        {
                            Id = 2,
                            Damage = 20,
                            Name = "Frenzy"
                        },
                        new
                        {
                            Id = 3,
                            Damage = 50,
                            Name = "Blizzard"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Player");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = new byte[] { 29, 39, 234, 9, 40, 84, 168, 9, 192, 120, 164, 139, 133, 212, 140, 206, 218, 0, 136, 219, 138, 115, 170, 175, 151, 192, 148, 66, 122, 140, 106, 191, 87, 144, 146, 103, 239, 205, 38, 237, 164, 10, 188, 55, 225, 118, 185, 91, 218, 1, 74, 108, 178, 21, 157, 176, 90, 83, 205, 4, 201, 25, 146, 70 },
                            PasswordSalt = new byte[] { 85, 184, 56, 149, 166, 55, 226, 18, 113, 43, 24, 177, 95, 232, 139, 73, 84, 198, 107, 26, 235, 142, 105, 118, 144, 78, 42, 254, 51, 69, 203, 112, 37, 220, 131, 32, 104, 211, 170, 49, 251, 232, 148, 6, 144, 198, 32, 2, 244, 143, 97, 236, 253, 52, 200, 221, 176, 87, 218, 69, 37, 64, 86, 129, 77, 126, 119, 170, 75, 45, 24, 74, 205, 130, 11, 82, 0, 175, 129, 107, 249, 156, 226, 199, 107, 122, 47, 99, 159, 215, 160, 92, 148, 225, 92, 76, 171, 200, 156, 26, 255, 100, 175, 180, 157, 7, 253, 187, 1, 60, 34, 165, 210, 235, 165, 113, 1, 76, 169, 19, 143, 95, 168, 25, 222, 26, 111, 14 },
                            Username = "User1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = new byte[] { 29, 39, 234, 9, 40, 84, 168, 9, 192, 120, 164, 139, 133, 212, 140, 206, 218, 0, 136, 219, 138, 115, 170, 175, 151, 192, 148, 66, 122, 140, 106, 191, 87, 144, 146, 103, 239, 205, 38, 237, 164, 10, 188, 55, 225, 118, 185, 91, 218, 1, 74, 108, 178, 21, 157, 176, 90, 83, 205, 4, 201, 25, 146, 70 },
                            PasswordSalt = new byte[] { 85, 184, 56, 149, 166, 55, 226, 18, 113, 43, 24, 177, 95, 232, 139, 73, 84, 198, 107, 26, 235, 142, 105, 118, 144, 78, 42, 254, 51, 69, 203, 112, 37, 220, 131, 32, 104, 211, 170, 49, 251, 232, 148, 6, 144, 198, 32, 2, 244, 143, 97, 236, 253, 52, 200, 221, 176, 87, 218, 69, 37, 64, 86, 129, 77, 126, 119, 170, 75, 45, 24, 74, 205, 130, 11, 82, 0, 175, 129, 107, 249, 156, 226, 199, 107, 122, 47, 99, 159, 215, 160, 92, 148, 225, 92, 76, 171, 200, 156, 26, 255, 100, 175, 180, 157, 7, 253, 187, 1, 60, 34, 165, 210, 235, 165, 113, 1, 76, 169, 19, 143, 95, 168, 25, 222, 26, 111, 14 },
                            Username = "User2"
                        });
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CharacterId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Damage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("Weapons");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CharacterId = 1,
                            Damage = 20,
                            Name = "The Master Sword"
                        },
                        new
                        {
                            Id = 2,
                            CharacterId = 2,
                            Damage = 5,
                            Name = "Crystal Wand"
                        });
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("dotnet_rpg.Models.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.HasOne("dotnet_rpg.Models.User", "User")
                        .WithMany("Characters")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("dotnet_rpg.Models.Weapon", b =>
                {
                    b.HasOne("dotnet_rpg.Models.Character", "Character")
                        .WithOne("Weapon")
                        .HasForeignKey("dotnet_rpg.Models.Weapon", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Character");
                });

            modelBuilder.Entity("dotnet_rpg.Models.Character", b =>
                {
                    b.Navigation("Weapon");
                });

            modelBuilder.Entity("dotnet_rpg.Models.User", b =>
                {
                    b.Navigation("Characters");
                });
#pragma warning restore 612, 618
        }
    }
}
